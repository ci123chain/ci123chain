package node

import (
	"encoding/hex"
	"encoding/json"
	acc_types "github.com/ci123chain/ci123chain/pkg/account/types"
	app_types "github.com/ci123chain/ci123chain/pkg/app/types"
	"github.com/ci123chain/ci123chain/pkg/vm/evmtypes"
	"github.com/tendermint/tendermint/types"
	"io/ioutil"
	"testing"
)

func TestFixFile(t *testing.T) {
	cdc := app_types.GetCodec()
	rawFile, err := types.GenesisDocFromFile("./genesis.json")


	exportFile, err := types.GenesisDocFromFile("/Users/tanhui/Desktop/exportFile.json")
	if err != nil {
		t.Log(err)
	}

	saveAddressesStr, err := ioutil.ReadFile("./address.txt")
	var address []string
	err = json.Unmarshal(saveAddressesStr, &address)
	if err != nil {
		panic(err)
	}


	type GenesisState map[string]json.RawMessage
	var genesisStateRaw GenesisState
	cdc.MustUnmarshalJSON(rawFile.AppState, &genesisStateRaw)

	var genesisState GenesisState
	cdc.MustUnmarshalJSON(exportFile.AppState, &genesisState)




	var vmGenesisState, newVmGenesisState evmtypes.GenesisState
	evmtypes.ModuleCdc.MustUnmarshalJSON(genesisState["vm"], &vmGenesisState)
	evmtypes.ModuleCdc.MustUnmarshalJSON(genesisState["vm"], &newVmGenesisState)
	newVmGenesisState.Accounts = []evmtypes.GenesisAccount{}
	for _, vmAcc := range vmGenesisState.Accounts {

		if isContain(address, vmAcc.Address.String()) {
			newVmGenesisState.Accounts = append(newVmGenesisState.Accounts, vmAcc)
		}
		if isFactory(hex.EncodeToString(vmAcc.Code)) {
			newVmGenesisState.Accounts = append(newVmGenesisState.Accounts, vmAcc)
			address = append(address, vmAcc.Address.String())
		}
	}
	newVMStateBz, _ := json.Marshal(newVmGenesisState)
	genesisStateRaw["vm"] = newVMStateBz


	//fix accounts
	var accGenesisState, newAccGenesisState acc_types.GenesisState
	cdc.MustUnmarshalJSON(genesisState["accounts"], &accGenesisState)
	for _, gs := range accGenesisState {
		if isContain(address, gs.GetAddress().String()) {
			newAccGenesisState = append(newAccGenesisState, gs)
		}
		if gs.GetContractType() == "" {
			newAccGenesisState = append(newAccGenesisState, gs)
		}
	}
	newAccGenesisStateBz := cdc.MustMarshalJSON(newAccGenesisState)

	genesisStateRaw["accounts"] = newAccGenesisStateBz
	//fix gravity
	//var graGenesisState, newGraGenesisState gravity_types.GenesisState
	//cdc.MustUnmarshalJSON(genesisState["gravity"], &graGenesisState)
	//newGraGenesisState = *gravity_types.DefaultGenesisState()
	//newGraGenesisState.DelegateKeys = graGenesisState.DelegateKeys
	//newGraGenesisStateBz := cdc.MustMarshalJSON(newGraGenesisState)
	//genesisState["gravity"] = newGraGenesisStateBz


	//write new file
	newGenesisStateBz := cdc.MustMarshalJSON(genesisStateRaw)
	rawFile.AppState = newGenesisStateBz
	rawFile.SaveAs("./exportFileNew.json")
}

func isContain(items []string, item string) bool {
	for _, eachItem := range items {
		if item == eachItem {
			return true
		}
	}
	return false
}

const FactoryCode = "608060405234801561001057600080fd5b506004361061002b5760003560e01c806302c9d48414610030575b600080fd5b610117600480360360a081101561004657600080fd5b81019060208101813564010000000081111561006157600080fd5b82018360208201111561007357600080fd5b8035906020019184600183028401116401000000008311171561009557600080fd5b9193909290916020810190356401000000008111156100b357600080fd5b8201836020820111156100c557600080fd5b803590602001918460018302840111640100000000831117156100e757600080fd5b9193509150803560ff16906020810135906040013573ffffffffffffffffffffffffffffffffffffffff16610140565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b60008787878787878760405161015590610242565b60ff841660408201526060810183905273ffffffffffffffffffffffffffffffffffffffff8216608082015260a08082528101879052806020810160c082018a8a80828437600083820152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016909101848103835288815260200190508888808284376000838201819052604051601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169093018190039c509a509098505050505050505050f080158015610235573d6000803e3d6000fd5b5098975050505050505050565b6112de806102508339019056fe60806040523480156200001157600080fd5b50604051620012de380380620012de833981810160405260a08110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b506040908152602082810151918301516060909301518751929550929350869186918691620001ce9160039190860190620003b4565b508151620001e4906004906020850190620003b4565b506005805460ff191660ff929092169190911790555050811562000225576200021f8160ff8516600a0a84026001600160e01b036200025116565b62000246565b60058054610100600160a81b0319166101006001600160a01b038416021790555b505050505062000459565b6001600160a01b038216620002ad576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b620002c9816002546200035260201b62000b931790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620002fc91839062000b9362000352821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600082820183811015620003ad576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003f757805160ff191683800117855562000427565b8280016001018555821562000427579182015b82811115620004275782518255916020019190600101906200040a565b506200043592915062000439565b5090565b6200045691905b8082111562000435576000815560010162000440565b90565b610e7580620004696000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806340c10f191161008c57806395d89b411161006657806395d89b4114610301578063a457c2d714610309578063a9059cbb14610342578063dd62ed3e1461037b576100df565b806340c10f191461026257806370a082311461029d5780638da5cb5b146102d0576100df565b806323b872dd116100bd57806323b872dd146101c8578063313ce5671461020b5780633950935114610229576100df565b806306fdde03146100e4578063095ea7b31461016157806318160ddd146101ae575b600080fd5b6100ec6103b6565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012657818101518382015260200161010e565b50505050905090810190601f1680156101535780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61019a6004803603604081101561017757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561046a565b604080519115158252519081900360200190f35b6101b6610487565b60408051918252519081900360200190f35b61019a600480360360608110156101de57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135909116906040013561048d565b610213610534565b6040805160ff9092168252519081900360200190f35b61019a6004803603604081101561023f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561053d565b61029b6004803603604081101561027857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561059e565b005b6101b6600480360360208110156102b357600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610637565b6102d861065f565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100ec610680565b61019a6004803603604081101561031f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356106ff565b61019a6004803603604081101561035857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561077a565b6101b66004803603604081101561039157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602001351661078e565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104605780601f1061043557610100808354040283529160200191610460565b820191906000526020600020905b81548152906001019060200180831161044357829003601f168201915b5050505050905090565b600061047e6104776107c6565b84846107ca565b50600192915050565b60025490565b600061049a848484610911565b61052a846104a66107c6565b61052585604051806060016040528060288152602001610dab6028913973ffffffffffffffffffffffffffffffffffffffff8a166000908152600160205260408120906104f16107c6565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002054919063ffffffff610ae216565b6107ca565b5060019392505050565b60055460ff1690565b600061047e61054a6107c6565b84610525856001600061055b6107c6565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610b9316565b600554610100900473ffffffffffffffffffffffffffffffffffffffff16331461062957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f74204f776e65720000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6106338282610c0e565b5050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b600554610100900473ffffffffffffffffffffffffffffffffffffffff1681565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104605780601f1061043557610100808354040283529160200191610460565b600061047e61070c6107c6565b8461052585604051806060016040528060258152602001610e1c60259139600160006107366107c6565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610ae216565b600061047e6107876107c6565b8484610911565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b3390565b73ffffffffffffffffffffffffffffffffffffffff8316610836576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610df86024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166108a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610d636022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff831661097d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610dd36025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166109e9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610d406023913960400191505060405180910390fd5b610a3981604051806060016040528060268152602001610d856026913973ffffffffffffffffffffffffffffffffffffffff8616600090815260208190526040902054919063ffffffff610ae216565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054610a7b908263ffffffff610b9316565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610b8b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b50578181015183820152602001610b38565b50505050905090810190601f168015610b7d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c0757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8216610c9057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610ca3908263ffffffff610b9316565b60025573ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054610cdc908263ffffffff610b9316565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a7231582007c8c629130c489778457a6dbe48fb11b7abaf75958311eee6bec72d381e1bc364736f6c63430005100032a265627a7a72315820810c74353ed53db40f3e9c337638b6a9202227d3039a8242b66452fa796cb1a164736f6c63430005100032"

func isFactory(code string) bool {
	if code == FactoryCode {
		return true
	}
	return false

}